# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
          - name: Setup Python and Poetry
  # You may pin to the exact commit or the version.
  # uses: ITProKyle/action-setup-python@c84a5b17f808ff642ed5a194473129ff3aa0ebad
  uses: ITProKyle/action-setup-python@v0.2.0
  with:
    # The target architecture (x86, x64) of the Python interpreter.
    architecture: # optional
    # Temporary input to allow for slight customization of the cache key until full customization can be provided.

    cache-key-suffix: # optional
    # Ensure the cached Python virtual environment is healthy.
In most cases, this should be left set to `true` (default). _(non-Windows only)_

    ensure-cache-is-healthy: # optional, default is true
    # Whether to run `poetry install`.
    poetry-install: # optional, default is true
    # Additional args to pass to `poetry install`.
    poetry-install-args: # optional, default is -vvv --remove-untracked
    # Command for installing poetry project.
Can be used to provide a custom install command.
The value of `poetry-install-args` is appended after this.

    poetry-install-cmd: # optional, default is poetry install
    # Allow install of prerelease versions of Poetry.
    poetry-preview: # optional
    # Poetry version to use. If version is not provided then latest stable version will be used.
    poetry-version: # optional
    # Version range or exact version of a Python version to use, using semver version range syntax.
    python-version: # optional, default is 3.x
    # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }}
